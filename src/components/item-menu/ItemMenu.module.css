@import '../../css-variables/constants.css';

.itemMenu {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-areas: "title title" "details relations" "buttons buttons";
    padding: 0 var(--gutterHorizontal);
    gap: 1rem 3rem;
}
.title {
    grid-area: title;
}
.details {
    grid-area: details;
    display: flex;
    flex-direction: column;
}
.relations {
    grid-area: relations;
}
.buttons {
    grid-area: buttons;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.button {
    width: 50%;
}

@media (max-width: 600px) {
    .itemMenu {
        grid-template-columns: 1fr;
        grid-template-areas: "title" "details" "relations" "buttons";
    }
    .button {
        width: 100%;
    }
}

.itemMenu * {
    margin-bottom: 0.5rem;
}
.itemMenu h1 {
    margin-top: 0.5rem;
    font-size: 1.4rem;
}
.itemMenu input {
    width: 100%;
    font-size: 1.3rem;
    padding: 5px;
}
.itemMenu select {
    font-size: 1.1rem;
    padding: 5px;
}
.itemMenu textarea {
    font-size: 1.1rem;
    padding: 5px;
    height: 7rem;
}
.itemMenu h3 {
    margin-top: 2rem;
}

/* InfoSectionMenu */
.infoSectionLine {
    display: grid;
    grid-template-columns: 1fr 2fr 2.5rem;
    gap: 0.7rem;
    width: 100%;
    height: 1.4rem;
    margin-bottom: calc(1rem + 5px);
}
.infoSectionLine input .autosuggest {
    width: 100%;
    height: 100%;
    margin-bottom: 0;
    font-size: 1.1rem;
}

.autosuggest {
    position: relative;
}

.autosuggest input {
    height: unset;
}

.autosuggest * {
    margin-bottom: 0;
}

.react-autosuggest__container {
  position: relative;
  width: 100%;
  direction: rtl;
  display: flex;
  align-items: center;
}

/* Ensure the dropdown is absolutely positioned */
.react-autosuggest__suggestions-container, .react-autosuggest__suggestions-container--open {
  position: absolute !important;
  top: 100% !important;
  right: 0 !important; /* For RTL */
  left: auto !important;
  width: 100% !important;
  z-index: 10;
  background: white;
  border: 1px solid #ccc;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  max-height: 200px;
  overflow-y: auto;
}

.infoSectionLine div :not(.autosuggest *) {
    line-height: 1.6;
    height: calc(100% + 10px);
    display: flex;
    justify-content: center;
    align-items: center;
}
.infoSectionPlusGrayed {
    background-color: #f1f1f1;
    color: #d1d1d1;
    border: 1px solid #d1d1d1;
    justify-content: center;
    align-items: center;
}
.infoSectionPlusClickable {
    background-color: #f1f1f1;
    color: #797979;
    border: 1px solid #797979;
    font-weight: bold;
    align-items: center;
    justify-content: center;
}

.listItemContainer {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 10px; /* Your desired gap */
    width: 100%; /* Important: This means 100% of the parent's content area (368px) */
    max-width: 100%;
    min-width: 0; /* Ensures the container itself can shrink */
    overflow: hidden; /* Hides any visual overflow */
    box-sizing: border-box; /* Proper box model */
    flex-shrink: 1; /* Allows this container to shrink */
    /* flex-basis: auto; // Keep or remove, default is fine */
}

.supplierListItem {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    gap: 5px; /* Your desired gap */
    height: 80px;
    padding: 0 1rem; /* 16px horizontal padding each side */
    border: 1px solid #ccc; /* 1px border each side */
    border-radius: 8px;
    box-sizing: border-box;

    flex-grow: 1; /* Allows it to grow to fill space within listItemContainer */
    flex-shrink: 1; /* Allows it to shrink */
    flex-basis: 0; /* Ensures it starts shrinking from 0 for available space calculation */
    min-width: 0; /* Crucial for text truncation */
    overflow-x: hidden; /* Hides horizontal overflow within this element */
}

/* Ensure text content inside also respects borders/padding if any were added */
.supplierTextContent {
    flex-grow: 1; /* Allows text to grow */
    flex-shrink: 1; /* Allows text to shrink */
    flex-basis: 0; /* Ensures text starts shrinking from 0 for available space calculation */

    display: flex;
    flex-direction: column;
    width: 0; 

    /* ***** THE MOST CRITICAL PART ***** */
    /* Explicitly setting min-width to 0 is key, but sometimes a browser's
       internal min-content calculation can interfere.
       Using 'initial' can sometimes help reset it more forcefully. */
    min-width: 0 !important; /* Force min-width to 0, ensuring it can always collapse */
    /* Or, if the above doesn't work, try a non-zero, very small pixel value,
       like min-width: 1px; for edge cases, but 0 is preferred. */
    
    overflow: hidden; /* Essential for ellipsis */
    text-overflow: ellipsis; /* Essential for ellipsis */
    white-space: nowrap; /* Keeps text on one line */
    text-align: right; /* Your original alignment */
    box-sizing: border-box;
}

.supplierTextContent p {
    flex-shrink: 1;
    display: flex;
    min-width: 0;
}

.supplierListItemImage {
    height: 90%;
    width: auto;
    object-fit: contain;
    max-width: 80px; /* Explicitly limits the image's max size */
    flex-shrink: 0; /* Prevents image from shrinking */
    flex-basis: auto; /* Allows it to take its natural size up to max-width */
}

.supplierListItem h2 {
    font-size: 1.1rem;
    margin: 0.5rem 0;
    text-align: right;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    box-sizing: border-box; /* Explicitly set here too */
}


.supplierListItem {
    /* ... existing styles like display, flex-direction, gap, height, padding, border, border-radius, box-sizing ... */
    display: flex;
    box-sizing: border-box !important; /* THIS IS THE KEY FIX */
    min-width: 0 !important;
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 0; /* ADD or ensure this line is present */
    overflow-x: hidden;
}

    /* box-sizing: border-box !important;
    min-width: 0 !important;
    width: 100% !important;
    
    margin: 0 !important; 
    padding: 0 !important; 
    display: flex; */

.listItemContainer svg { /* The MdEdit icon */
    flex-shrink: 0; /* Prevents SVG from shrinking */
    flex-basis: auto; /* Allows it to take its natural size (24px) */
    width: 24px; /* Ensure its fixed width */
    height: 24px;
    color: var(--primary-color);
}
.emergencyToggle {
    text-align: start;
    flex: 0 0 auto;
    margin-left: 0.5rem;
}

.emergencyToggle label {
    font-weight: 500;
    margin-right: 0;
    cursor: pointer;
}

.emergencyToggle input {
    width: auto;
    margin-left: 8px; /* Space between checkbox and text */
}

.parentSupplierBadge {
    top: 8px;
    left: 8px;
    background-color: #7f8c8d; /* A muted grey color for the badge */
    color: white;
    padding: 2px 8px;
    margin-right: 1rem;
    font-size: 10px;
    border-radius: 10px;
    font-weight: bold;
    text-transform: uppercase;
}
