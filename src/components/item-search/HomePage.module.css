@import '../../css-variables/constants.css';

.searchMenu {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    position: fixed;
    z-index: 2;
    top: var(--navbarHeight);
    width: calc(100vw - 1rem);
    background-color: white;
    border-bottom: 1px solid #e4e4e4;
}
.searchMenu select {
    font-size: 1.2rem;
    margin-top: 0.5rem;
    padding: var(--searchPadding);
    height: var(--searchSelectHeight);
}

.listItemPusher {
    width: 100%;
    height: calc(var(--searchInputHeight) + 2*var(--searchSelectHeight) + 6*var(--searchPadding) + 2*0.5rem);
}

.listItem {
    border-top: 1px solid #e4e4e4;
    display: flex;
    padding-right: 1rem;
    position: relative; /* This is needed for the badge positioning */

    flex-direction: row; /* Arrange children in a row (default, but explicit for clarity) */
    align-items: center; /* Vertically align items (text and image) in the center */
    justify-content: flex-start;
    padding-left: 1rem; /* Add padding to the left side */
    gap: 15px; /* Space between the text content and the image */
    height: 80px; /* Define a fixed height for the list item, adjust as needed */
    box-sizing: border-box; /* Include padding and border in the total height */
}

.listItem h2 {
    font-size: 1.1rem;
    margin: 0.5rem 0;
    text-overflow: ellipsis;
    overflow: hidden;
    width: 100%;
    white-space: nowrap;
    text-align: right;
}
.listItem p {
    margin: 0;
    margin-bottom: 0.5rem;
}

.itemImage {
    /* Image sizing */
    height: 90%; /* Make image height fit the parent .listItem's height */
    width: auto; /* Maintain aspect ratio */
    object-fit: contain; /* Ensures the whole image is visible without cropping */
    max-width: 80px; /* Optional: Set a max width to prevent extremely wide images. Adjust as needed based on your 80px height. */
    flex-shrink: 0; /* Prevent the image from shrinking if space is tight */
    margin: 1.2rem
}

.itemTextContent {
    display: flex; /* Make this a flex container too, for column layout of name/cat */
    flex-direction: column; /* Stack name and cat number */
    justify-content: center; /* Center them vertically within their own container */
    width: 50%;
    /* No margin-right here because gap on .listItem handles spacing */
}

.itemsWrapper {
    overflow: scroll;
    display: flex;
    flex-direction: column;
    height: calc(100vh - var(--navbarHeight) - var(--searchInputHeight) - 2*var(--searchSelectHeight) - 6*var(--searchPadding) - 2*0.5rem);
}

.searchRow {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.searchBarWrapper {
    flex: 1 1 0;
    min-width: 0;
    display: flex;
    align-items: center;
    width: 100%;
    box-sizing: border-box;
}
.searchBarWrapper input {
    font-size: 1.6rem;
    padding: var(--searchPadding);
    height: var(--searchInputHeight);
    border: 1px solid #999;
    grid-area: container;
    width: 100%;
}
.xButton {
    grid-area: container;
    width: 2.5rem;
    font-size: 2rem;
    color: #888;
    justify-self: end;
}

.archiveToggle {
    flex: 0 0 auto;
    margin-left: 0.5rem;
}

.archiveToggle label {
  font-weight: 500;
  cursor: pointer;
}

.archiveToggle input {
  margin-left: 8px; /* Space between checkbox and text */
}

.noResults {
  text-align: center;
  margin-top: 3rem;
  color: #888;
}

.archivedBadge {
  position: absolute;
  top: 8px;
  left: 8px;
  background-color: #7f8c8d; /* A muted grey color for the badge */
  color: white;
  padding: 2px 8px;
  font-size: 10px;
  border-radius: 10px;
  font-weight: bold;
  text-transform: uppercase;
}
